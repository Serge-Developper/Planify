import { MongoClient } from 'mongodb';
import dotenv from 'dotenv';

// Charger les variables d'environnement
dotenv.config();

async function testDatabaseConnection() {
  try {
    console.log('üîç Test de connexion √† la base de donn√©es...');
    
    if (!process.env.MONGODB_URI) {
      console.error('‚ùå MONGODB_URI non d√©finie dans les variables d\'environnement');
      return;
    }
    
    const client = new MongoClient(process.env.MONGODB_URI);
    await client.connect();
    console.log('‚úÖ Connexion MongoDB r√©ussie');
    
    const db = client.db('planifyvrai');
    const usersCollection = db.collection('users');
    
    // Compter le nombre total d'utilisateurs
    const totalUsers = await usersCollection.countDocuments();
    console.log(`üìä Nombre total d'utilisateurs: ${totalUsers}`);
    
    // V√©rifier un utilisateur sp√©cifique (SergeA'1)
    const user = await usersCollection.findOne({ username: "SergeA'1" });
    
    if (user) {
      console.log('‚úÖ Utilisateur SergeA\'1 trouv√©');
      console.log('üìã Donn√©es utilisateur:');
      console.log(`   - ID: ${user._id}`);
      console.log(`   - Username: ${user.username}`);
      console.log(`   - Role: ${user.role}`);
      console.log(`   - Secret Questions: ${JSON.stringify(user.secretQuestions)}`);
      console.log(`   - Has Secret Questions: ${user.hasSecretQuestions}`);
      
      // V√©rifier la logique de hasSecretQuestions
      const hasSecretQuestions = user.secretQuestions && Array.isArray(user.secretQuestions) && user.secretQuestions.length > 0;
      console.log(`üîç Logique hasSecretQuestions: ${hasSecretQuestions}`);
      
      if (hasSecretQuestions) {
        console.log('‚úÖ L\'utilisateur a des questions secr√®tes - ne devrait PAS √™tre redirig√© vers le formulaire');
      } else {
        console.log('‚ùå L\'utilisateur n\'a pas de questions secr√®tes - sera redirig√© vers le formulaire');
      }
    } else {
      console.log('‚ùå Utilisateur SergeA\'1 non trouv√©');
    }
    
    // V√©rifier tous les utilisateurs avec des questions secr√®tes
    const usersWithSecrets = await usersCollection.find({ 
      secretQuestions: { $exists: true, $ne: null } 
    }).toArray();
    
    console.log(`\nüìä Utilisateurs avec des questions secr√®tes: ${usersWithSecrets.length}`);
    
    usersWithSecrets.forEach((u, index) => {
      console.log(`   ${index + 1}. ${u.username} - Questions: ${u.secretQuestions ? u.secretQuestions.length : 0}`);
    });
    
    await client.close();
    console.log('‚úÖ Test termin√©');
    
  } catch (error) {
    console.error('‚ùå Erreur lors du test:', error);
  }
}

testDatabaseConnection();
